from openpyxl import Workbook
from openpyxl import load_workbook


# val in main_daten_number_YN_headers or val in main_datennumber_headers or val in main_dates_headers or val in codes_description_dict.keys() or val in (
# "Возражения на АКТ КНП от НП", 'Возражения на дополнение к АКТУ КНП от НП',
# 'Направление проекта Решения КНП в УФНС')):

def form_second_row_headers(ws, col, val, headers:dict):
        print(tuple(headers.keys())[-1])
        if not val in tuple(headers.keys())[-1]:
            ws.merge_cells(start_row=1, start_column=col, end_row=2, end_column=col)
        else:
            for sub_col, val in enumerate(tuple(headers.values())[-1]):
                ws.cell(row=2, column=sub_col + col).value = val
                if sub_col == len(tuple(headers.values())[-1]) - 1:
                    ws.merge_cells(start_row=1, start_column=col, end_row=1, end_column=sub_col + col)


main_headers = ("Код ИФНС", "Наименование ВП", "ИНН ВП", "ВП акцептован", "Номер и дата письма об акцептовании",
                "Сведения о поданных налоговых декларациях (рег. номер, период, актуально (да/нет))", "Дата начала КНП",
                "Дата окончания 2-х месячного срока КНП", "Дата окончания 3-х месячного срока КНП",
                "Сумма сложного расхождения дошедшая до ВП, отрабатываемая в ходе КНП, тыс. руб. (1-НР)",
                "Планируемая сумма доначислений по результатам КНП всего, тыс.руб.",
                "ИНН, наименование проблемного контрагента, установленного в рамках \"сложного\" расхождения",
                "Сведения о заменах проблемного контрагента (наименование, ИНН)",
                "Письмо ТНО в УФНС о согласовании продления КНП до 3 -х месяцев",
                "Письмо УФНС о согласовании срока продления КНП до 3 -х месяцев",
                "Решение о продлении КНП до 3-х месяцев", "Направление проекта Акта КНП в УФНС",
                "Результат рассмотрения проекта  Акта КНП Управлением", "Акт КНП", 'Возражения на АКТ КНП от НП',
                'Решение о проведении дополнительных мероприятий', 'Дополнение к Акту КНП',
                'Возражения на дополнение к АКТУ КНП от НП', 'Направление проекта Решения КНП в УФНС',
                'Решение КНП', 'Направление проекта Решения о принятии обеспечительных мер по результатам КНП в УФНС',
                'Результат рассмотрения проекта Решения о принятии обеспечительных мер по результатам КНП',
                'Решение о принятии обеспечительных мер по результатам КНП', "Меры взыскания",
                'Направление в УФНС проекта сообщения о преступлении (ст. 32 НК РФ)',
                'Направление проекта сообщения о преступлении  (ст. 82 НК РФ)',
                'Дата и номер cлужебной записки передачи материалов  в ОПАИД', "УД возбуждено", "Дата возбуждения УД",
                "Дата заслушивания ТНО по результатам МНК", "КНП окончена", "Стадии КНП (1 - да, 0 - в ходе)", "Уплата",
                "Причины отсутствия акта",
                "Сумма поступившей уплаты на 5 число представления информации, тыс.руб.",
                "Остаток (=столбец 9 - столбец 66)" "Комментарии ТНО",
                "Мои вопросы к ТНО", "Кто пишет акт"
                )
datennumber_headers = {("Письмо ТНО в УФНС о согласовании продления КНП до 3 -х месяцев",
                        "Письмо УФНС о согласовании срока продления КНП до 3 -х месяцев",
                        "Решение о продлении КНП до 3-х месяцев", "Направление проекта Акта КНП в УФНС",
                        'Решение о проведении дополнительных мероприятий',
                        'Направление проекта Решения о принятии обеспечительных мер по результатам КНП в УФНС',
                        'Направление в УФНС проекта сообщения о преступлении (ст. 32 НК РФ)',
                        'Направление проекта сообщения о преступлении  (ст. 82 НК РФ)'): ("Дата", "Номер")}
daten_number_YN_headers = {("Результат рассмотрения проекта  Акта КНП Управлением",
                            'Результат рассмотрения проекта Решения о принятии обеспечительных мер по результатам КНП'): (
    "Дата", "Номер", "Поддержано Управлением (да/нет)")}
dates_headers = {("Акт КНП", 'Дополнение к Акту КНП', 'Решение КНП',
                  'Решение о принятии обеспечительных мер по результатам КНП'): (
    "Дата", "Номер", "Дата вручения", "Способ вручения (лично, ТКС, почта)")}
codes_description_dict = {
    "Стадии КНП (1 - да, 0 - в ходе)": "1-есть акт, 2 - проводятся дополнительные мероприятия, 3 - допы окончены,4 -в УФНС направлен проект решения,5-вынесено решение о привлечении, 6 - вынесено решение об отказе, 7 - отменено ВНО,  8 - апелляционная жалоба, 0 - сбор базы",
    "Уплата": "1- УНД к уплате до акта,2- уплата после акта,но до решения,  3- уплата по решению 100%,  4 - частичная уплата по решению, 5 - поступлений по решению нет",
    "Причины отсутствия акта": "1- акт не составлялся (нет док.базы 54.1), 2- ТНО не запрашивала продления, акт не составлялся, 3 - ТНО установлен иной, поэтому продления не запрашивали, 4- информация об открытой КНП у ВП в адрес УФНС не направлялась"
}


def SaveToWorkbook(list, filename):
    wb = Workbook()
    ws = wb.active
    starting_row = 4
    starting_col = 1
    for col, val in enumerate(main_headers):
        current_col = col + 1
        while True:
            try:
                ws.cell(row=1, column=current_col).value=val
                break
            except AttributeError:
                current_col += 1
        for headers in (datennumber_headers,daten_number_YN_headers,dates_headers):
            form_second_row_headers(ws,current_col,val,headers)


    # elif val in main_dates_headers:
    #
    # elif val in main_datennumber_headers:
    #
    # elif val == "Возражения на АКТ КНП от НП":
    #
    # elif val == 'Возражения на дополнение к АКТУ КНП от НП':
    #
    # elif val == 'Направление проекта Решения КНП в УФНС':
    for element in list:
        for col, val in enumerate(element):
            ws.cell(row=starting_row, column=col + starting_col).value = val
        starting_row += 1
    wb.save(filename)


def LoadWorkbook(filename):
    wb = load_workbook(filename)
    ws = wb.active
    row_list = []
    for row in ws.iter_rows(min_row=2, values_only=True):
        row_list.append(list(row))
    return row_list
